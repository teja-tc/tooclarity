'use client';

import React from 'react';
import { useRouter, usePathname } from 'next/navigation';
import styles from './FooterNav.module.css';

interface FooterNavProps {
  onExploreClick?: () => void;
}

export const FooterNav: React.FC<FooterNavProps> = ({ onExploreClick }) => {
  const router = useRouter();
  const pathname = usePathname();

  const navItems = [
    {
      id: 'home',
      label: 'Home',
      icon: (
        <svg width="18" height="19" viewBox="0 0 18 19" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18 8.99931V17.9993C18 18.1982 17.921 18.389 17.7803 18.5296C17.6397 18.6703 17.4489 18.7493 17.25 18.7493H12C11.8011 18.7493 11.6103 18.6703 11.4697 18.5296C11.329 18.389 11.25 18.1982 11.25 17.9993V13.1243C11.25 13.0248 11.2105 12.9295 11.1402 12.8591C11.0698 12.7888 10.9745 12.7493 10.875 12.7493H7.125C7.02554 12.7493 6.93016 12.7888 6.85983 12.8591C6.78951 12.9295 6.75 13.0248 6.75 13.1243V17.9993C6.75 18.1982 6.67098 18.389 6.53033 18.5296C6.38968 18.6703 6.19891 18.7493 6 18.7493H0.75C0.551088 18.7493 0.360322 18.6703 0.21967 18.5296C0.0790178 18.389 0 18.1982 0 17.9993V8.99931C0.000184396 8.60155 0.15834 8.22016 0.439687 7.93899L7.93969 0.438992C8.22096 0.1579 8.60235 0 9 0C9.39765 0 9.77904 0.1579 10.0603 0.438992L17.5603 7.93899C17.8417 8.22016 17.9998 8.60155 18 8.99931Z" fill="#0222D7"/>
        </svg>
      ),
      path: '/dashboard',
      onClick: () => router.push('/dashboard'),
    },
    {
      id: 'explore',
      label: 'Explore',
      icon: (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18.9881 18.1931L14.1712 13.3762C15.5448 11.7966 16.2514 9.74529 16.1421 7.6548C16.0328 5.56432 15.1161 3.59794 13.5852 2.17016C12.0544 0.742392 10.0289 -0.035227 7.93592 0.00122609C5.8429 0.0376792 3.84579 0.885357 2.36557 2.36557C0.885357 3.84579 0.0376792 5.8429 0.00122609 7.93592C-0.035227 10.0289 0.742392 12.0544 2.17016 13.5852C3.59794 15.1161 5.56432 16.0328 7.6548 16.1421C9.74529 16.2514 11.7966 15.5448 13.3762 14.1712L18.1931 18.9881C18.2997 19.0874 18.4407 19.1415 18.5865 19.139C18.7322 19.1364 18.8712 19.0774 18.9743 18.9743C19.0774 18.8712 19.1364 18.7322 19.139 18.5865C19.1415 18.4407 19.0874 18.2997 18.9881 18.1931ZM1.15308 8.09058C1.15308 6.71847 1.55996 5.37718 2.32226 4.23631C3.08456 3.09545 4.16805 2.20625 5.43571 1.68117C6.70338 1.15608 8.09828 1.0187 9.44402 1.28638C10.7898 1.55407 12.0259 2.2148 12.9961 3.18503C13.9664 4.15525 14.6271 5.3914 14.8948 6.73714C15.1625 8.08288 15.0251 9.47779 14.5 10.7454C13.9749 12.0131 13.0857 13.0966 11.9448 13.8589C10.804 14.6212 9.46269 15.0281 8.09058 15.0281C6.25133 15.0258 4.48804 14.2942 3.18749 12.9937C1.88694 11.6931 1.15531 9.92984 1.15308 8.09058Z" fill="#697282"/>
        </svg>
      ),
       path: '/student/explore',
      onClick: () => {
        router.push('/student/explore');
        if (onExploreClick) {
          onExploreClick();
        }
      },
    },
    {
      id: 'wishlist',
      label: 'Wishlist',
      icon: (
        <svg width="12" height="16" viewBox="0 0 12 16" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M0 15.5V1.6155C0 1.15517 0.154167 0.770833 0.4625 0.4625C0.770833 0.154167 1.15517 0 1.6155 0H10.3845C10.8448 0 11.2292 0.154167 11.5375 0.4625C11.8458 0.770833 12 1.15517 12 1.6155V15.5L6 12.923L0 15.5ZM1 13.95L6 11.8L11 13.95V1.6155C11 1.4615 10.9359 1.32042 10.8077 1.19225C10.6796 1.06408 10.5385 1 10.3845 1H1.6155C1.4615 1 1.32042 1.06408 1.19225 1.19225C1.06408 1.32042 1 1.4615 1 1.6155V13.95Z" fill="#697282"/>
        </svg>
      ),
      path: null, // Wishlist is handled in the dashboard
      onClick: () => {
        // This will be handled by the dashboard's wishlist pane
        router.push('/dashboard');
      },
    },
    {
      id: 'profile',
      label: 'Profile',
      icon: (
        <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9.5625 0C7.67122 0 5.82241 0.560831 4.24986 1.61157C2.67732 2.66231 1.45167 4.15577 0.727906 5.90309C0.00414312 7.65041 -0.185226 9.57311 0.183745 11.4281C0.552716 13.283 1.46346 14.9869 2.8008 16.3242C4.13814 17.6615 5.84201 18.5723 7.69695 18.9413C9.5519 19.3102 11.4746 19.1209 13.2219 18.3971C14.9692 17.6733 16.4627 16.4477 17.5134 14.8751C18.5642 13.3026 19.125 11.4538 19.125 9.5625C19.122 7.02728 18.1136 4.59675 16.3209 2.80408C14.5283 1.01141 12.0977 0.00297736 9.5625 0ZM4.26 16.125C4.81012 15.2102 5.58753 14.4534 6.51667 13.9279C7.44581 13.4025 8.49508 13.1263 9.5625 13.1263C10.6299 13.1263 11.6792 13.4025 12.6083 13.9279C13.5375 14.4534 14.3149 15.2102 14.865 16.125C13.3653 17.3411 11.4933 18.0047 9.5625 18.0047C7.63175 18.0047 5.75966 17.3411 4.26 16.125ZM6.375 8.8125C6.375 8.18207 6.56195 7.5658 6.9122 7.04162C7.26244 6.51744 7.76026 6.10889 8.3427 5.86763C8.92514 5.62638 9.56604 5.56326 10.1844 5.68625C10.8027 5.80924 11.3706 6.11282 11.8164 6.5586C12.2622 7.00438 12.5658 7.57234 12.6888 8.19065C12.8117 8.80896 12.7486 9.44986 12.5074 10.0323C12.2661 10.6147 11.8576 11.1126 11.3334 11.4628C10.8092 11.8131 10.1929 12 9.5625 12C8.71713 12 7.90637 11.6642 7.3086 11.0664C6.71083 10.4686 6.375 9.65788 6.375 8.8125ZM15.7041 15.3412C14.8203 13.967 13.4992 12.9306 11.9541 12.3994C12.7245 11.8862 13.3094 11.1387 13.6222 10.2675C13.9351 9.39619 13.9592 8.44739 13.6912 7.56133C13.4231 6.67526 12.877 5.89898 12.1337 5.34726C11.3903 4.79553 10.4892 4.49765 9.56344 4.49765C8.63772 4.49765 7.73656 4.79553 6.99322 5.34726C6.24987 5.89898 5.70379 6.67526 5.43572 7.56133C5.16764 8.44739 5.19181 9.39619 5.50464 10.2675C5.81746 11.1387 6.40235 11.8862 7.17282 12.3994C5.62769 12.9306 4.30663 13.967 3.42282 15.3412C2.29297 14.1423 1.53884 12.6387 1.25348 11.0162C0.968118 9.39363 1.16401 7.72303 1.81698 6.2105C2.46995 4.69797 3.55143 3.40968 4.928 2.50459C6.30456 1.5995 7.91598 1.1172 9.56344 1.1172C11.2109 1.1172 12.8223 1.5995 14.1989 2.50459C15.5755 3.40968 16.6569 4.69797 17.3099 6.2105C17.9629 7.72303 18.1588 9.39363 17.8734 11.0162C17.588 12.6387 16.8339 14.1423 15.7041 15.3412Z" fill="#697282"/>
        </svg>
      ),
      path: '/student/profile',
      onClick: () => router.push('/student/profile'),
    },
  ];

  const isActive = (path: string | null) => {
    if (!path) return false;
    return pathname === path || pathname?.startsWith(path);
  };

  return (
    <footer className={styles.footerNav}>
      <div className={styles.navContainer}>
        {navItems.map((item) => (
          <button
            key={item.id}
            className={`${styles.navItem} ${isActive(item.path) ? styles.active : ''}`}
            onClick={item.onClick}
            aria-label={item.label}
          >
            <div className={styles.iconWrapper}>
              {item.icon}
            </div>
            <span className={styles.label}>{item.label}</span>
          </button>
        ))}
      </div>
      <div className={styles.homeBottomSheetDragHandle}>
        <svg width="134" height="5" viewBox="0 0 134 5" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="134" height="5" rx="2.5" fill="#060B13"/>
        </svg>
      </div>
    </footer>
  );
};

export default FooterNav;
